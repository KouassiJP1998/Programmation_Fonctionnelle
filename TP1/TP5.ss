(define (emballer-100 nbDisc)
  (display (truncate (/ nbDisc 100)))(display " boîte(s) de 100 de remplie(s)") (newline)
  (display (remainder nbDisc 100))
  (newline)
)

(define (emballer-50 nbDisc)
  (display (truncate (/ nbDisc 50)))(display " boîte(s) de 50 de remplie(s)") (newline)
  (display (remainder nbDisc 50))
  (newline)
)

(define (emballer-10 nbDisc)
  (display (truncate (/ nbDisc 10)))(display " boîte(s) de 10 de remplie(s)") (newline)
  (display (remainder nbDisc 10))
  (newline)
)

(emballer-10 320)
(newline)
(emballer-50 320)
(newline)
(emballer-100 320)
(newline)
(display " ---------- ")
(newline)

(define (emballer-tout nbDisc)
  (emballer-100 nbDisc)
  (set! nbDisc (remainder nbDisc 100))
  (emballer-50 nbDisc)
  (set! nbDisc (remainder nbDisc 100))
  (emballer-10 nbDisc)
)

(let (
  (nb (read)))
  (if (= (remainder nb 10) 0)
    (emballer-tout nb)
    (display "erreur")
  )
)
